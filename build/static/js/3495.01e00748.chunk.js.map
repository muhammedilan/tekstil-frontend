{"version":3,"file":"static/js/3495.01e00748.chunk.js","mappings":"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","sources":["pages/shop/ShopGridNoSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\"; \r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopTopbar from \"../../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n\r\nconst ShopGridNoSidebar = () => {\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const sortType = \"\";\r\n  const sortValue = \"\";\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 15;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = layout => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Shop Page\"\r\n        description=\"Shop page of flone react minimalist eCommerce template.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb \r\n          pages={[\r\n            {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            {label: \"Shop\", path: process.env.PUBLIC_URL + pathname }\r\n          ]} \r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopGridNoSidebar;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\nimport { t } from \"i18next\";\r\nconst ShopTopAction = ({ getLayout, getFilterSortParams }) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        <div className=\"shop-select\">\r\n          <select\r\n            onChange={(e) => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">{t(\"default\")}</option>\r\n            <option value=\"priceHighToLow\">{t(\"price_high_to_low\")}</option>\r\n            <option value=\"priceLowToHigh\">{t(\"price_low_to_high\")}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={(e) => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number,\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { memo } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({ getLayout, getFilterSortParams }) => {\r\n  return (\r\n    <>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number,\r\n};\r\n\r\nexport default memo(ShopTopbar);\r\n"],"names":["useState","layout","setLayout","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","products","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","Fragment","titleTemplate","description","headerTop","pages","label","path","process","className","getLayout","getFilterSortParams","sortType","sortValue","productCount","length","sortedProductCount","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","onChange","e","target","value","t","onClick","setActiveLayout","ShopTopbar","memo"],"sourceRoot":""}