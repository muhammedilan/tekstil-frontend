{"version":3,"file":"static/js/6577.9c3228e2.chunk.js","mappings":"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","sources":["pages/shop/ShopGridStandard.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopColor.js","wrappers/product/ShopSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\nimport { setProducts } from \"../../store/slices/product-slice\";\r\nimport axios from \"axios\";\r\nimport { useCallback } from \"react\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst ShopGridStandard = () => {\r\n  const { category, collection } = useParams();\r\n\r\n  let categoryId = category?.split(\"-c-\")[1];\r\n  let collectionId = collection?.split(\"-c-\")[1];\r\n\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const [sortType, setSortType] = useState(\r\n    (category && \"category\") || (collection && \"collection\")\r\n  );\r\n  const [sortValue, setSortValue] = useState(categoryId || collectionId);\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const [ready, setReady] = useState(false);\r\n\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 15;\r\n\r\n  let { pathname } = useLocation();\r\n  let dispatch = useDispatch();\r\n\r\n  const getLayout = useCallback((layout) => {\r\n    setLayout(layout);\r\n  }, []);\r\n\r\n  const getSortParams = useCallback((sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  }, []);\r\n\r\n  const getFilterSortParams = useCallback((sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (category) {\r\n      axios.get(`product/category/${categoryId}`).then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch(setProducts(res.data));\r\n        }\r\n        setReady(true);\r\n      });\r\n    } else if (collection) {\r\n      axios.get(`product/collection/${collectionId}`).then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch(setProducts(res.data));\r\n        }\r\n        setReady(true);\r\n      });\r\n    } else {\r\n      axios.get(\"product\").then((res) => {\r\n        res.status === 200 && dispatch(setProducts(res.data));\r\n        setReady(true);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  const BreadCrumb = useMemo(\r\n    () => (\r\n      <Breadcrumb\r\n        pages={[\r\n          { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n          { label: \"Shop\", path: process.env.PUBLIC_URL + pathname },\r\n        ]}\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <SEO\r\n        titleTemplate=\"Shop Page\"\r\n        description=\"Shop page of flone react minimalist eCommerce template.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        {BreadCrumb}\r\n        \r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            {ready ? (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                  {/* shop sidebar */}\r\n                  <ShopSidebar\r\n                    products={products}\r\n                    getSortParams={getSortParams}\r\n                    sideSpaceClass=\"mr-30\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                  {/* shop topbar default */}\r\n                  <ShopTopbar\r\n                    getLayout={getLayout}\r\n                    getFilterSortParams={getFilterSortParams}\r\n                  />\r\n\r\n                  {/* shop page content default */}\r\n                  <ShopProducts layout={layout} products={currentData} />\r\n\r\n                  {/* shop product pagination */}\r\n                  <div className=\"pro-pagination-style text-center mt-30\">\r\n                    <Paginator\r\n                      totalRecords={sortedProducts.length}\r\n                      pageLimit={pageLimit}\r\n                      pageNeighbours={2}\r\n                      setOffset={setOffset}\r\n                      currentPage={currentPage}\r\n                      setCurrentPage={setCurrentPage}\r\n                      pageContainerClass=\"mb-0 mt-0\"\r\n                      pagePrevText=\"«\"\r\n                      pageNextText=\"»\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"flone-preloader-wrapper\">\r\n                <div className=\"flone-preloader\">\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopGridStandard;\r\n","import { t } from \"i18next\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setProducts } from \"../../store/slices/product-slice\";\r\n\r\nconst ShopSearch = ({ products }) => {\r\n  const [fixedProducts, setFixedProducts] = useState();\r\n\r\n  useEffect(() => {\r\n    setFixedProducts(products);\r\n    console.log(\"set et\", fixedProducts);\r\n  }, []);\r\n\r\n  let dispatch = useDispatch();\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">{t(\"search\")}</h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <div className=\"pro-sidebar-search-form\">\r\n          <input\r\n            onChange={(e) => {\r\n              dispatch(\r\n                setProducts(\r\n                  fixedProducts.filter(\r\n                    (p) =>\r\n                      p.name.includes(e.target.value) ||\r\n                      p.name.toUpperCase().includes(e.target.value)\r\n                  )\r\n                )\r\n              );\r\n            }}\r\n            id=\"product-search\"\r\n            type=\"text\"\r\n            placeholder={`${t(\"search_here\")} ...`}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getSortParams(\"category\", category.id);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category.name}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import { t } from \"i18next\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopColor = ({ colors, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">{t(\"color\")}</h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {colors ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={(e) => {\r\n                    getSortParams(\"color\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> {t(\"all_colors\")}\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {colors.map((color, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={(e) => {\r\n                        getSortParams(\"color\", color.id);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      <span className=\"checkmark\" /> {color.name}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No colors found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopColor.propTypes = {\r\n  colors: PropTypes.array,\r\n  getSortParams: PropTypes.func,\r\n};\r\n\r\nexport default ShopColor;\r\n","import PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n} from \"../../helpers/product\";\r\nimport ShopSearch from \"../../components/product/ShopSearch\";\r\nimport ShopCategories from \"../../components/product/ShopCategories\";\r\nimport ShopColor from \"../../components/product/ShopColor\";\r\n\r\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  return (\r\n    <div className={clsx(\"sidebar-style\", sideSpaceClass)}>\r\n      {/* shop search */}\r\n      <ShopSearch products={products} />\r\n\r\n      {/* filter by categories */}\r\n      <ShopCategories\r\n        categories={uniqueCategories}\r\n        getSortParams={getSortParams}\r\n      />\r\n\r\n      {/* filter by color */}\r\n      <ShopColor colors={uniqueColors} getSortParams={getSortParams} />\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSidebar.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array,\r\n  sideSpaceClass: PropTypes.string,\r\n};\r\n\r\nexport default ShopSidebar;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\nimport { t } from \"i18next\";\r\nconst ShopTopAction = ({ getLayout, getFilterSortParams }) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        <div className=\"shop-select\">\r\n          <select\r\n            onChange={(e) => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">{t(\"default\")}</option>\r\n            <option value=\"priceHighToLow\">{t(\"price_high_to_low\")}</option>\r\n            <option value=\"priceLowToHigh\">{t(\"price_low_to_high\")}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={(e) => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number,\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { memo } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({ getLayout, getFilterSortParams }) => {\r\n  return (\r\n    <>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number,\r\n};\r\n\r\nexport default memo(ShopTopbar);\r\n"],"names":["useParams","category","collection","categoryId","split","collectionId","useState","layout","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","ready","setReady","products","useSelector","state","product","pathname","useLocation","dispatch","useDispatch","getLayout","useCallback","getSortParams","getFilterSortParams","useEffect","axios","then","res","status","setProducts","data","getSortedProducts","filterSortedProducts","slice","BreadCrumb","useMemo","pages","label","path","process","titleTemplate","description","headerTop","className","sideSpaceClass","totalRecords","length","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","fixedProducts","setFixedProducts","console","log","t","onChange","e","filter","p","name","includes","target","value","toUpperCase","id","type","placeholder","categories","onClick","setActiveSort","map","key","colors","color","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","clsx","setActiveLayout","ShopTopbar","memo"],"sourceRoot":""}