{"version":3,"file":"static/js/73.e3c02d56.chunk.js","mappings":"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","sources":["pages/shop/ShopGridFullWidth.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopColor.js","wrappers/product/ShopSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["import { Fragment, useState, useEffect } from 'react';\r\nimport Paginator from 'react-hooks-paginator';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { getSortedProducts } from '../../helpers/product';\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from '../../layouts/LayoutOne';\r\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\r\nimport ShopSidebar from '../../wrappers/product/ShopSidebar';\r\nimport ShopTopbar from '../../wrappers/product/ShopTopbar';\r\nimport ShopProducts from '../../wrappers/product/ShopProducts';\r\n\r\nconst ShopGridFullWidth = ({location}) => {\r\n    const [layout, setLayout] = useState('grid three-column');\r\n    const [sortType, setSortType] = useState('');\r\n    const [sortValue, setSortValue] = useState('');\r\n    const [filterSortType, setFilterSortType] = useState('');\r\n    const [filterSortValue, setFilterSortValue] = useState('');\r\n    const [offset, setOffset] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentData, setCurrentData] = useState([]);\r\n    const [sortedProducts, setSortedProducts] = useState([]);\r\n    const { products } = useSelector((state) => state.product);\r\n\r\n    const pageLimit = 15;\r\n    let { pathname } = useLocation();\r\n\r\n    const getLayout = (layout) => {\r\n        setLayout(layout)\r\n    }\r\n\r\n    const getSortParams = (sortType, sortValue) => {\r\n        setSortType(sortType);\r\n        setSortValue(sortValue);\r\n    }\r\n\r\n    const getFilterSortParams = (sortType, sortValue) => {\r\n        setFilterSortType(sortType);\r\n        setFilterSortValue(sortValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\r\n        sortedProducts = filterSortedProducts;\r\n        setSortedProducts(sortedProducts);\r\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue ]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <SEO\r\n                titleTemplate=\"Shop Page\"\r\n                description=\"Shop page of flone react minimalist eCommerce template.\"\r\n            />\r\n\r\n            <LayoutOne headerTop=\"visible\">\r\n                {/* breadcrumb */}\r\n                <Breadcrumb \r\n                    pages={[\r\n                        {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n                        {label: \"Shop\", path: process.env.PUBLIC_URL + pathname }\r\n                    ]} \r\n                />\r\n\r\n                <div className=\"shop-area pt-95 pb-100\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                                {/* shop sidebar */}\r\n                                <ShopSidebar products={products} getSortParams={getSortParams} sideSpaceClass=\"mr-30\"/>\r\n                            </div>\r\n                            <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                                {/* shop topbar default */}\r\n                                <ShopTopbar getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={currentData.length} />\r\n\r\n                                {/* shop page content default */}\r\n                                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                                {/* shop product pagination */}\r\n                                <div className=\"pro-pagination-style text-center mt-30\">\r\n                                    <Paginator\r\n                                        totalRecords={sortedProducts.length}\r\n                                        pageLimit={pageLimit}\r\n                                        pageNeighbours={2}\r\n                                        setOffset={setOffset}\r\n                                        currentPage={currentPage}\r\n                                        setCurrentPage={setCurrentPage}\r\n                                        pageContainerClass=\"mb-0 mt-0\"\r\n                                        pagePrevText=\"«\"\r\n                                        pageNextText=\"»\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </LayoutOne>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ShopGridFullWidth;","import { t } from \"i18next\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setProducts } from \"../../store/slices/product-slice\";\r\n\r\nconst ShopSearch = ({ products }) => {\r\n  const [fixedProducts, setFixedProducts] = useState();\r\n\r\n  useEffect(() => {\r\n    setFixedProducts(products);\r\n    console.log(\"set et\", fixedProducts);\r\n  }, []);\r\n\r\n  let dispatch = useDispatch();\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">{t(\"search\")}</h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <div className=\"pro-sidebar-search-form\">\r\n          <input\r\n            onChange={(e) => {\r\n              dispatch(\r\n                setProducts(\r\n                  fixedProducts.filter(\r\n                    (p) =>\r\n                      p.name.includes(e.target.value) ||\r\n                      p.name.toUpperCase().includes(e.target.value)\r\n                  )\r\n                )\r\n              );\r\n            }}\r\n            id=\"product-search\"\r\n            type=\"text\"\r\n            placeholder={`${t(\"search_here\")} ...`}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getSortParams(\"category\", category.id);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category.name}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import { t } from \"i18next\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopColor = ({ colors, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">{t(\"color\")}</h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {colors ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={(e) => {\r\n                    getSortParams(\"color\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> {t(\"all_colors\")}\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {colors.map((color, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={(e) => {\r\n                        getSortParams(\"color\", color.id);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      <span className=\"checkmark\" /> {color.name}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No colors found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopColor.propTypes = {\r\n  colors: PropTypes.array,\r\n  getSortParams: PropTypes.func,\r\n};\r\n\r\nexport default ShopColor;\r\n","import PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n} from \"../../helpers/product\";\r\nimport ShopSearch from \"../../components/product/ShopSearch\";\r\nimport ShopCategories from \"../../components/product/ShopCategories\";\r\nimport ShopColor from \"../../components/product/ShopColor\";\r\n\r\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  return (\r\n    <div className={clsx(\"sidebar-style\", sideSpaceClass)}>\r\n      {/* shop search */}\r\n      <ShopSearch products={products} />\r\n\r\n      {/* filter by categories */}\r\n      <ShopCategories\r\n        categories={uniqueCategories}\r\n        getSortParams={getSortParams}\r\n      />\r\n\r\n      {/* filter by color */}\r\n      <ShopColor colors={uniqueColors} getSortParams={getSortParams} />\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSidebar.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array,\r\n  sideSpaceClass: PropTypes.string,\r\n};\r\n\r\nexport default ShopSidebar;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\nimport { t } from \"i18next\";\r\nconst ShopTopAction = ({ getLayout, getFilterSortParams }) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        <div className=\"shop-select\">\r\n          <select\r\n            onChange={(e) => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">{t(\"default\")}</option>\r\n            <option value=\"priceHighToLow\">{t(\"price_high_to_low\")}</option>\r\n            <option value=\"priceLowToHigh\">{t(\"price_low_to_high\")}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={(e) => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number,\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { memo } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({ getLayout, getFilterSortParams }) => {\r\n  return (\r\n    <>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number,\r\n};\r\n\r\nexport default memo(ShopTopbar);\r\n"],"names":["location","useState","layout","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","products","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","Fragment","titleTemplate","description","headerTop","pages","label","path","process","className","getSortParams","sideSpaceClass","getLayout","getFilterSortParams","productCount","length","sortedProductCount","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","fixedProducts","setFixedProducts","console","log","dispatch","useDispatch","t","onChange","e","setProducts","filter","p","name","includes","target","value","toUpperCase","id","type","placeholder","categories","onClick","setActiveSort","map","category","key","colors","color","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","clsx","setActiveLayout","ShopTopbar","memo"],"sourceRoot":""}