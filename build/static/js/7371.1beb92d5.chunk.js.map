{"version":3,"file":"static/js/7371.1beb92d5.chunk.js","mappings":"gMAqHA,UAhH4B,WAC1B,OAA0CA,EAAAA,EAAAA,YAAU,eAA7CC,EAAa,KAAEC,EAAgB,KACtC,OACE,iCACE,iBAAKC,UAAU,OAAM,WACnB,iBAAKA,UAAU,YAAW,WACxB,kBAAOA,UAAU,aAAY,SAAC,iBAC9B,kBACEC,KAAK,OACLD,UAAU,eACVE,YAAY,oBACZC,SAAU,SAACC,GAAC,OACVL,GAAiB,kBACZD,GAAa,IAChBO,YAAaD,EAAEE,OAAOC,QACtB,QAIR,iBAAKP,UAAU,YAAW,WACxB,kBAAOA,UAAU,aAAY,SAAC,WAC9B,kBACEC,KAAK,OACLD,UAAU,eACVE,YAAY,cACZC,SAAU,SAACC,GAAC,OACVL,GAAiB,kBACZD,GAAa,IAChBU,MAAOJ,EAAEE,OAAOC,QAChB,QAIR,gBAAKP,UAAU,qBAAoB,SACnB,OAAbF,QAAa,IAAbA,GAAAA,EAAeW,OACd,iBAAKT,UAAU,+BAA8B,WAC3C,gBACEU,MAAM,OACNC,OAAO,MACPX,UAAU,gBACVY,IAAKC,IAAIC,gBAAgBhB,EAAcW,OACvCM,IAAI,mBAEN,SAAC,MAAQ,CACPf,UAAU,2DACVgB,QAAS,WACPjB,GAAiB,kBAAKD,GAAa,IAAEW,MAAO,OAC9C,EACAQ,KAAM,SAIV,iBACEC,WAAY,SAACd,GAAC,OAAKA,EAAEe,gBAAgB,EACrCC,OAAQ,SAAChB,GACPA,EAAEe,iBACFpB,GAAiB,kBACZD,GAAa,IAChBW,MAAOL,EAAEiB,aAAaC,MAAM,KAEhC,EACAN,QAAS,SAACZ,GAAC,OAAKA,EAAEmB,cAAcC,iBAAiBC,OAAO,EACxDzB,UAAU,wBAAuB,WAEjC,iBAAKA,UAAU,wBAAuB,WACpC,gBAAKA,UAAU,OAAM,UACnB,cAAGA,UAAU,mDAEf,wBAAI,4CAEN,kBACEC,KAAK,OACLD,UAAU,SACV0B,OAAO,uBACPvB,SAAU,SAACC,GACLA,EAAEE,OAAOgB,MAAM,IACjBvB,GAAiB,kBACZD,GAAa,IAChBW,MAAOL,EAAEE,OAAOgB,MAAM,KAG5B,aAMV,gBAAKtB,UAAU,gBAAe,UAC5B,mBACEgB,QAAS,WACP,IAAMW,EAAW,IAAIC,SACrBC,OAAOC,QAAQhC,GAAeiC,KAAI,SAACxB,GAAK,OACtCoB,EAASK,OAAOzB,EAAM,GAAIA,EAAM,GAAG,IAErC0B,EAAAA,EAAAA,KACQ,UAAWN,GAChBO,MACC,SAACC,GAAG,OACa,MAAfA,EAAIC,QACJC,EAAAA,EAAAA,QAAkBF,EAAIG,KAAM,CAAEC,SAAU,gBAAiB,GAEjE,EACAtC,KAAK,SACLD,UAAU,uBAAsB,SACjC,eAMT,C","sources":["pages/admin/sliders-pictures/CreateSliderPicture.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\nimport axios from \"axios\";\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nconst CreateSliderPicture = () => {\r\n  const [sliderPicture, setSliderPicture] = useState();\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <label className=\"form-label\">Small Title</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter small title\"\r\n            onChange={(e) =>\r\n              setSliderPicture({\r\n                ...sliderPicture,\r\n                small_title: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <label className=\"form-label\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter title\"\r\n            onChange={(e) =>\r\n              setSliderPicture({\r\n                ...sliderPicture,\r\n                title: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"card-body relative\">\r\n          {sliderPicture?.image ? (\r\n            <div className=\"w-[275px] h-[367px] relative\">\r\n              <img\r\n                width=\"100%\"\r\n                height=\"230\"\r\n                className=\"w-full h-full\"\r\n                src={URL.createObjectURL(sliderPicture.image)}\r\n                alt=\"Product Image\"\r\n              />\r\n              <FiTrash2\r\n                className=\"p-1 absolute right-2 top-2 cursor-pointer text-[#ff0000]\"\r\n                onClick={() => {\r\n                  setSliderPicture({ ...sliderPicture, image: null });\r\n                }}\r\n                size={24}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div\r\n              onDragOver={(e) => e.preventDefault()}\r\n              onDrop={(e) => {\r\n                e.preventDefault();\r\n                setSliderPicture({\r\n                  ...sliderPicture,\r\n                  image: e.dataTransfer.files[0],\r\n                });\r\n              }}\r\n              onClick={(e) => e.currentTarget.lastElementChild.click()}\r\n              className=\"dropzone dz-clickable\"\r\n            >\r\n              <div className=\"dz-message needsclick\">\r\n                <div className=\"mb-3\">\r\n                  <i className=\"display-4 text-muted ri-upload-cloud-2-fill\" />\r\n                </div>\r\n                <h5>Drop files here or click to upload.</h5>\r\n              </div>\r\n              <input\r\n                type=\"file\"\r\n                className=\"hidden\"\r\n                accept=\".png,.jpg,.jpeg,.gif\"\r\n                onChange={(e) => {\r\n                  if (e.target.files[0]) {\r\n                    setSliderPicture({\r\n                      ...sliderPicture,\r\n                      image: e.target.files[0],\r\n                    });\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"text-end mb-3\">\r\n        <button\r\n          onClick={() => {\r\n            const formData = new FormData();\r\n            Object.entries(sliderPicture).map((value) =>\r\n              formData.append(value[0], value[1])\r\n            );\r\n            axios\r\n              .post(\"/slider\", formData)\r\n              .then(\r\n                (res) =>\r\n                  res.status === 201 &&\r\n                  cogoToast.success(res.data, { position: \"bottom-right\" })\r\n              );\r\n          }}\r\n          type=\"submit\"\r\n          className=\"btn btn-success w-sm\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateSliderPicture;\r\n"],"names":["useState","sliderPicture","setSliderPicture","className","type","placeholder","onChange","e","small_title","target","value","title","image","width","height","src","URL","createObjectURL","alt","onClick","size","onDragOver","preventDefault","onDrop","dataTransfer","files","currentTarget","lastElementChild","click","accept","formData","FormData","Object","entries","map","append","axios","then","res","status","cogoToast","data","position"],"sourceRoot":""}