{"version":3,"file":"static/js/8365.93b3d0be.chunk.js","mappings":"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","sources":["pages/shop/ShopListTwoColumn.js","components/product/ShopTopFilter.js","components/product/ShopTopActionFilter.js","wrappers/product/ShopTopbarFilter.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\"; \r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopTopbarFilter from \"../../wrappers/product/ShopTopbarFilter\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n\r\nconst ShopListTwoColumn = ({ location }) => {\r\n  const [layout, setLayout] = useState(\"list two-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 16;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = layout => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Shop Page\"\r\n        description=\"Shop page of flone react minimalist eCommerce template.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb \r\n          pages={[\r\n            {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            {label: \"Shop\", path: process.env.PUBLIC_URL + pathname }\r\n          ]} \r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar filter */}\r\n                <ShopTopbarFilter\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopListTwoColumn;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes,\r\n  setActiveSort\r\n} from \"../../helpers/product\";\r\n\r\nconst ShopTopFilter = ({ products, getSortParams }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n\r\n  return (\r\n    <div className=\"product-filter-wrapper\" id=\"product-filter-wrapper\">\r\n      <div className=\"product-filter-wrapper__inner\">\r\n        <div className=\"row\">\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Categories</h5>\r\n              {uniqueCategories ? (\r\n                <ul>\r\n                  {uniqueCategories.map((category, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"category\", category);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {category}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No categories found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Color</h5>\r\n              {uniqueColors ? (\r\n                <ul>\r\n                  {uniqueColors.map((color, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"color\", color);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {color}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No colors found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Size</h5>\r\n              {uniqueSizes ? (\r\n                <ul>\r\n                  {uniqueSizes.map((size, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          className=\"text-uppercase\"\r\n                          onClick={e => {\r\n                            getSortParams(\"size\", size);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {size}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No sizes found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter product-filter--tag\">\r\n              <h5>Tag</h5>\r\n              {uniqueTags ? (\r\n                <ul>\r\n                  {uniqueTags.map((tag, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"tag\", tag);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {tag}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No tags found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopFilter.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopTopFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopFilter from \"./ShopTopFilter\";\r\nimport { toggleShopTopFilter } from \"../../helpers/product\";\r\n\r\nconst ShopTopActionFilter = ({\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"shop-top-bar mb-35\">\r\n        <div className=\"select-shoing-wrap\">\r\n          <div className=\"shop-select\">\r\n            <select\r\n              onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n            >\r\n              <option value=\"default\">Default</option>\r\n              <option value=\"priceHighToLow\">Price - High to Low</option>\r\n              <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n            </select>\r\n          </div>\r\n          <p>\r\n            Showing {sortedProductCount} of {productCount} result\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"filter-active\">\r\n          <button onClick={e => toggleShopTopFilter(e)}>\r\n            <i className=\"fa fa-plus\"></i> filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* shop top filter */}\r\n      <ShopTopFilter products={products} getSortParams={getSortParams} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopActionFilter.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopActionFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopActionFilter\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n        products={products}\r\n        getSortParams={getSortParams}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n"],"names":["location","useState","layout","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","products","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","Fragment","titleTemplate","description","headerTop","pages","label","path","process","className","getLayout","getFilterSortParams","productCount","length","sortedProductCount","getSortParams","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags","id","map","category","key","onClick","e","setActiveSort","color","size","tag","onChange","target","value","toggleShopTopFilter"],"sourceRoot":""}